; The following entries specify dates and times.
; Dates and times in ADHydro are managed by having a reference date specified as a Julian date plus time points specified as a number of seconds after the reference date.
; A Julian date specifies a date and time as the number of days, including fractional day, since noon, January 1, 4713 BCE.
; Julian dates are always in the UTC time zone.  There are freely available utilities for converting Julian dates to year, month, day, hour, minute, second.
; A time point is a value interpreted as that number of seconds after the reference date (or before the refence date for negative numbers).
; To get the Julian date for a time point, convert the time point value from seconds to days and add it to the reference date.
; For example, the start of the simulation is at reference date + (simulationStartTime / (60.0 * 60.0 * 24.0)).
; The reference date and time points are stored as doubles in the software.
; The functions currently used by ADHydro for converting Julian dates to year, month, day, hour, minute, second do not work correctly for dates before 1 CE.
; Therefore it is an error for the reference date, or the Julian date of any time point, to be before 1 CE, which is a Julian date of 1721425.5.
;referenceDateJulian = 2451544.5 ; If referenceDateJulian is specified it takes precedence and the reference date is set to that value.
                                 ; Otherwise, if referenceDateYear, Month, Day, Hour, Minute, Second are all specified and within valid ranges,
                                 ; then the reference date is set to the Julian date value corresponding to that date and time.
                                 ; It is an error for some of referenceDateYear, Month, Day, Hour, Minute, Second to be specified, but not all specified and within valid ranges.
                                 ; If referenceDateDay doesn't exist for referenceDateMonth it isn't an error.  Instead, it rolls over to the next month.
                                 ; For example, referenceDateMonth=4, referenceDateDay=31 is the same as referenceDateMonth=5, referenceDateDay=1.
;referenceDateYear   = 2000      ; Valid range: 1   <= referenceDateYear
;referenceDateMonth  = 1         ; Valid range: 1   <= referenceDateMonth  <= 12
;referenceDateDay    = 1         ; Valid range: 1   <= referenceDateDay    <= 31
;referenceDateHour   = 0         ; Valid range: 0   <= referenceDateHour   <= 23
;referenceDateMinute = 0         ; Valid range: 0   <= referenceDateMinute <= 59
;referenceDateSecond = 0.0       ; Valid range: 0.0 <= referenceDateSecond <  60.0
                                 ; If neither of referenceDateJulian or referenceDateYear, Month, Day, Hour, Minute, Second are specified, then the default is the value in the input files.
;simulationStartTime = 0.0       ; Time point of the start of the simulation.  Default is the value of CurrentTime in the input files.
                                 ; If a value for simulationStartTime is specified here instead of using the default value from the input files,
                                 ; then zeroExpirationTime, zeroCumulativeFlow, and zeroWaterCreated are automatically set to true.
;simulationDuration  = 0.0       ; The simulation will run for this many simulated seconds.  Default is zero.
                                 ; Running for zero seconds can be useful for simply reading in and checking the input files.
                                 ; The time point of the end of the simulation is simulationStartTime + simulationDuration.
;outputPeriod        = INFINITY  ; Period in simulated seconds of output events.
                                 ; ADHydro will always output at the end of the simulation even if it is not an integer multiple of outputPeriod.
                                 ; Default is infinity meaning the simulation will only output once at the end of the simulation.

; The following entries specify special simulation operating modes.
;verbosityLevel = 2 ; Controls how much to print to the display.  Default is two.  Current verbosity levels are:
                    ;
                    ; 0 - Error messages only.
                    ; 1 - Messages about general simulation progress.
                    ; 2 - Warning messages about situations that may be a problem.
                    ; 3 - Messages that would be in levels 1 or 2, but they print too much text.
                    ; 4 - Warning messages about situations that are probably ok.

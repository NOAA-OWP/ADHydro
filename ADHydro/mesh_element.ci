module mesh_element
{
  array [1D] MeshElement
  {
    entry MeshElement();
    
    entry void sendInitialize(MeshElementInitStruct initialValues)
    {
      serial
      {
        receiveInitialize(initialValues);
      }
      
      while (!neighborInitialized[0] || !neighborInitialized[1] || !neighborInitialized[2])
      {
        when sendInitializeNeighbor(int neighborIndex, int neighborEdge, double neighborElementX, double neighborElementY,
                                    double neighborElementZSurface, double neighborElementZBedrock, double neighborElementConductivity,
                                    double neighborElementManningsN)
        {
          serial
          {
            receiveInitializeNeighbor(neighborIndex, neighborEdge, neighborElementX, neighborElementY, neighborElementZSurface, neighborElementZBedrock,
                                      neighborElementConductivity, neighborElementManningsN);
          }
        }
      }
      
      while (true)
      {
        when sendDoTimestep(int iterationThisTimestep, double dtThisTimestep)
        {
          serial
          {
            receiveDoTimestep(iterationThisTimestep, dtThisTimestep);
          }
      
          while (!timestepDone)
          {
            case
            {
              when sendCalculateBoundaryConditionFlow[iteration](int iterationThisMessage)
              {
                serial
                {
                  receiveCalculateBoundaryConditionFlow();
                }
              }
          
              when sendState[iteration](int iterationThisMessage, int edge, double neighborSurfacewaterDepth, double neighborGroundwaterHead)
              {
                serial
                {
                  receiveState(edge, neighborSurfacewaterDepth, neighborGroundwaterHead);
                }
              }
          
              when sendFlow[iteration](int iterationThisMessage, int edge, double edgeSurfacewaterFlow, double edgeGroundwaterFlow)
              {
                serial
                {
                  receiveFlow(edge, edgeSurfacewaterFlow, edgeGroundwaterFlow);
                }
              }
          
              when sendSurfacewaterFlowLimited[iteration](int iterationThisMessage, int edge, double edgeSurfacewaterFlow)
              {
                serial
                {
                  receiveSurfacewaterFlowLimited(edge, edgeSurfacewaterFlow);
                }
              }
          
              when sendGroundwaterFlowLimited[iteration](int iterationThisMessage, int edge, double edgeGroundwaterFlow)
              {
                serial
                {
                  receiveGroundwaterFlowLimited(edge, edgeGroundwaterFlow);
                }
              }
            }
          }
        }
      }
    };

    entry void sendInitializeNeighbor(int neighborIndex, int neighborEdge, double neighborElementX, double neighborElementY,
                                      double neighborElementZSurface, double neighborElementZBedrock, double neighborElementConductivity,
                                      double neighborElementManningsN);
    entry void sendDoTimestep(int iterationThisTimestep, double dtThisTimestep);
    entry void sendCalculateBoundaryConditionFlow(int iterationThisMessage);
    entry void sendState(int iterationThisMessage, int edge, double neighborSurfacewaterDepth, double neighborGroundwaterHead);
    entry void sendFlow(int iterationThisMessage, int edge, double edgeSurfacewaterFlow, double edgeGroundwaterFlow);
    entry void sendSurfacewaterFlowLimited(int iterationThisMessage, int edge, double edgeSurfacewaterFlow);
    entry void sendGroundwaterFlowLimited(int iterationThisMessage, int edge, double edgeGroundwaterFlow);
  };
};

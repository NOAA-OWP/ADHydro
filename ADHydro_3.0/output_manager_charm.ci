module output_manager_charm
{
  group OutputManagerCharm
  {
    entry OutputManagerCharm(FileManagerEnum fileManagerInit);
    
    entry void runForever()
    {
      when sendCreateFiles()
      {
        serial
        {
          createFiles();
          contribute(CkCallback(CkReductionTarget(OutputManagerCharm, barrier), thisProxy));
        }
      }
      
      when barrier() { serial { CkPrintf("got the barrier response.\n"); } }
      
      while (true)
      {
        case
        {
          when sendMeshElementState(const MeshElementStateCharm& state)
          {
            serial
            {
              handleMeshElementState(state);
            }
          }
          
          when sendChannelElementState(const ChannelElementStateCharm& state)
          {
            serial
            {
              handleChannelElementState(state);
            }
          }
        }
      }
    };
    
    entry void sendCreateFiles();
    entry [reductiontarget] void barrier();
    entry void sendMeshElementState(const MeshElementStateCharm& state);
    entry void sendChannelElementState(const ChannelElementStateCharm& state);
    
  }; // End group OutputManagerCharm.
}; // End module output_manager_charm.
